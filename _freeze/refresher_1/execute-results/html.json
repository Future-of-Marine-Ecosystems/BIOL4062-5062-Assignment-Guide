{
  "hash": "1c0233ecc7dcfedbc9277d7bc4be02ce",
  "result": {
    "engine": "knitr",
    "markdown": "# R Refresher Part 1: First Movements\n\n## Created by Mauricio Cantor, with modifications by Laura J. Feyrer, Ana Eguiguren, and Reid Steele\n\nThis section covers basic R workspace management.\n\n*NOTE:* On refresher pages, some code lines will be commented out to avoid file structure issues surrounding saving files, downloading packages, and changing working directories.\n\n## Working Directories:\n\nYour working directory is the default file path your R session is working under. You can find your working directory using the `getwd()` command. If you're working in an R project, it will be set to the path of the project by default.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First of all, let's check our working directory \n# (where we get files from and save our work in)\ngetwd()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"C:/Users/R3686/OneDrive - Dalhousie University/Documents/Teaching/Anaylsis of Biological Data/BIOL4062-5062-Assignment-Guide\"\n```\n\n\n:::\n:::\n\n\n\n\n\n\nYou can change your working directory if needed using `setwd()`.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# you can change it using the function 'setwd()' and \n# pasting the directory path in quotes inside the parentheses\n# note that in R we always use \"/\" or \"\\\\\" instead of \"\\\" on mswindows systems\n\n# For example:\n# setwd(\"C:/Users/R3686/OneDrive - Dalhousie University/Documents/Teaching/Anaylsis of Biological Data/Refresher/\")\n\n# You can also set up your working directory in Rstudio \n#by clicking in Session>Set Working Directory>Choose Directory; \n#or in R by clicking in File>Change Directory\n```\n:::\n\n\n\n\n\n\nYou can see what is inside your working directory using `dir()`, and pull out specific files of interest using a pattern with `list.files()`\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's take a look in what we have in our working directory\ndir()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"_book\"                         \"_freeze\"                      \n [3] \"_quarto.yml\"                   \"a1a.qmd\"                      \n [5] \"a1b.qmd\"                       \"a1c.qmd\"                      \n [7] \"a1d.qmd\"                       \"a1e.qmd\"                      \n [9] \"Assignment_Helpers.Rproj\"      \"cover.png\"                    \n[11] \"cuse.csv\"                      \"data1c.txt\"                   \n[13] \"docs\"                          \"fishcatch.csv\"                \n[15] \"FOME_Primary_BlueGradient.png\" \"FOME_Small.png\"               \n[17] \"guidelines.html\"               \"guidelines.qmd\"               \n[19] \"index.html\"                    \"index.qmd\"                    \n[21] \"monkey.csv\"                    \"refresher_1.qmd\"              \n[23] \"refresher_1.rmarkdown\"         \"refresher_1_files\"            \n[25] \"refresher_2.qmd\"               \"refresher_3.qmd\"              \n[27] \"refresher_4.qmd\"               \"refresher_5.qmd\"              \n[29] \"refresher_6.qmd\"               \"refresher_7.qmd\"              \n[31] \"refresher_8.qmd\"               \"refresher_9.qmd\"              \n[33] \"renv\"                          \"renv.lock\"                    \n[35] \"Schoenemann.csv\"               \"site_libs\"                    \n[37] \"snake.csv\"                     \"Workspace.RData\"              \n```\n\n\n:::\n\n```{.r .cell-code}\n# Pick out all the .csv files\nlist.files(pattern = '.csv')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"cuse.csv\"        \"fishcatch.csv\"   \"monkey.csv\"      \"Schoenemann.csv\"\n[5] \"snake.csv\"      \n```\n\n\n:::\n\n```{.r .cell-code}\n# If you are already sick of R, you can quit by typing:\n#q()\n```\n:::\n\n\n\n\n\n\n## Workspace Management\n\nYou can save your R workspace into your current directory using `save.image()`, or save specific objects using `save()`. This is useful for saving results that might change due to randomization, or that may take a long time to generate, such as complex models. You can then load these objects back in later using `load()`.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# You can save your work before you go (useful sometimes)\n# save.image('Workspace.RData')#but remember to give it a useful name\n# save(x, 'Workspace.RData')\n# \n# load('Workspace.RData')\n```\n:::\n\n\n\n\n\n\nYour R workspace is the environment which contains all of the R objects you've made. By default, everything in your R workspace is visible in the top-right panel in RStudio. You can list everything in your workspace using `ls()`, and delete individual objects using `rm()`. These commands can be combined using `rm(list=ls())` to completely clear your workspace.\n\nYou can make objects in your workspace using `<-` or `=`. Object names can be anything - try to make them informative so that you'll know what they are. Remember, everything is case-sensitive in R. X is a different object from x.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's take a look in our workspace\nls()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ncharacter(0)\n```\n\n\n:::\n\n```{.r .cell-code}\n# It's empty: no objects.Sure? what about x?\nx\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: object 'x' not found\n```\n\n\n:::\n\n```{.r .cell-code}\n# See, there's no such object. Let's create one called x\nx <- 2\n\nx = 2\n\n# '<-' assigns values to objects, works the same as '='\n# here is our object x\n\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\n# Let's take another look in our workspace. See all you objects there?\nls()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"x\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# RS Note: We can use ls to clear the entire workspace\nrm(list = ls())\n```\n:::\n",
    "supporting": [
      "refresher_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}